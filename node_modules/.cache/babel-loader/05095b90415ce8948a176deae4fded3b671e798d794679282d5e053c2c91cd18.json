{"ast":null,"code":"var _jsxFileName = \"/Users/sasy/Desktop/netflix-fix/src/components/MovieList.jsx\";\nimport { Row, Spinner } from \"react-bootstrap\";\nimport SingleMovie from \"./SingleMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  title,\n  loading,\n  fetchComments,\n  comments,\n  movies\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(Row, {\n    className: \"row-cols-1 row-cols-sm-2 row-cols-lg-4 row-cols-xl-6 mb-4 text-center\",\n    children: loading ? [...Array(6).keys()].map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-container\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 8\n      }, this)\n    }, movie, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)) : movies.map(movie => /*#__PURE__*/_jsxDEV(SingleMovie, {\n      data: movie,\n      comments: comments,\n      fetchComments: fetchComments\n    }, movie.imdbID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this)]\n}, void 0, true);\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["Row","Spinner","SingleMovie","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","title","loading","fetchComments","comments","movies","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","keys","map","movie","animation","variant","data","imdbID","_c","$RefreshReg$"],"sources":["/Users/sasy/Desktop/netflix-fix/src/components/MovieList.jsx"],"sourcesContent":["import { Row, Spinner } from \"react-bootstrap\";\nimport SingleMovie from \"./SingleMovie\";\n\nconst MovieList = ({ title, loading, fetchComments, comments, movies }) => (\n\t<>\n\t\t<h4>{title}</h4>\n\t\t<Row className=\"row-cols-1 row-cols-sm-2 row-cols-lg-4 row-cols-xl-6 mb-4 text-center\">\n\t\t\t{loading\n\t\t\t\t? [...Array(6).keys()].map((movie) => (\n\t\t\t\t\t\t<div className=\"spinner-container\" key={movie}>\n\t\t\t\t\t\t\t<Spinner animation=\"border\" variant=\"light\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t  ))\n\t\t\t\t: movies.map((movie) => (\n\t\t\t\t\t\t<SingleMovie\n\t\t\t\t\t\t\tdata={movie}\n\t\t\t\t\t\t\tkey={movie.imdbID}\n\t\t\t\t\t\t\tcomments={comments}\n\t\t\t\t\t\t\tfetchComments={fetchComments}\n\t\t\t\t\t\t/>\n\t\t\t\t  ))}\n\t\t</Row>\n\t</>\n);\n\nexport default MovieList;\n"],"mappings":";AAAA,SAASA,GAAG,EAAEC,OAAO,QAAQ,iBAAiB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,aAAa;EAAEC,QAAQ;EAAEC;AAAO,CAAC,kBACrER,OAAA,CAAAE,SAAA;EAAAO,QAAA,gBACCT,OAAA;IAAAS,QAAA,EAAKL;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,eAChBb,OAAA,CAACJ,GAAG;IAACkB,SAAS,EAAC,uEAAuE;IAAAL,QAAA,EACpFJ,OAAO,GACL,CAAC,GAAGU,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,iBAC/BlB,OAAA;MAAKc,SAAS,EAAC,mBAAmB;MAAAL,QAAA,eACjCT,OAAA,CAACH,OAAO;QAACsB,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAC;MAAO;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADPK,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExC,CACJ,CAAC,GACFL,MAAM,CAACS,GAAG,CAAEC,KAAK,iBACjBlB,OAAA,CAACF,WAAW;MACXuB,IAAI,EAAEH,KAAM;MAEZX,QAAQ,EAAEA,QAAS;MACnBD,aAAa,EAAEA;IAAc,GAFxBY,KAAK,CAACI,MAAM;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjB,CACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAAA,eACL,CACF;AAACU,EAAA,GApBIpB,SAAS;AAsBf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}